const OpenAI = require('openai');
const Message = require('../models/Message');

class ArnaldoMonthlyExpenses {
  constructor() {
    this.openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY,
    });
  }

  async processMessage(phoneNumber, message) {
    try {
      console.log(`üí∞ ArnaldoMonthlyExpenses processing message from ${phoneNumber}: "${message}"`);

      const response = await this.chat(message, phoneNumber);
      
      console.log(`üí∞ ArnaldoMonthlyExpenses response: "${response}"`);
      
      return response;
    } catch (error) {
      console.error('‚ùå Error in ArnaldoMonthlyExpenses:', error);
      return 'Desculpe, tive um problema t√©cnico. Pode repetir sua resposta?';
    }
  }

  async chat(message, phoneNumber) {
    try {
      // Get complete conversation history
      const history = await this.getConversationHistory(phoneNumber);
      
      // Build messages for ChatGPT with Arnaldo's expense discovery mission
      const messages = [
        {
          role: 'system',
          content: `Voc√™ √© o Arnaldo, um consultor financeiro brasileiro amig√°vel com UMA √öNICA MISS√ÉO: descobrir e organizar os custos mensais do usu√°rio.

CONTEXTO TEMPORAL: Estamos em julho de 2025. Use isso para calcular datas futuras corretamente.

SEU √öNICO OBJETIVO: Descobrir TODOS os gastos mensais do usu√°rio, organizados por categorias de despesa.

IMPORTANTE: Para ajudar usu√°rios com baixa educa√ß√£o financeira, voc√™ PODE fazer estimativas de alto n√≠vel quando necess√°rio para definir os gastos, como:
- Converter gastos semanais em mensais (semanal √ó 4)
- Converter gastos di√°rios em mensais (di√°rio √ó 30)
- Estimar custos por categoria quando n√£o souberem valores exatos
- Incluir gastos pontuais divididos mensalmente (ex: seguro anual √∑ 12)

CATEGORIAS PRINCIPAIS DE GASTOS:
- Moradia (aluguel, financiamento, condom√≠nio, IPTU)
- Alimenta√ß√£o (mercado, delivery, restaurantes)
- Transporte (combust√≠vel, transporte p√∫blico, financiamento ve√≠culo)
- Sa√∫de (plano de sa√∫de, rem√©dios, consultas)
- Educa√ß√£o (cursos, livros, escola/faculdade)
- Lazer (streaming, cinema, bares, hobbies)
- Vestu√°rio (roupas, cal√ßados)
- Outros gastos pessoais

REGRAS CR√çTICAS:
1. Descubra gastos em TODAS as categorias principais
2. Se o usu√°rio n√£o souber valores exatos, ajude a estimar
3. Inclua gastos pontuais divididos mensalmente (viagem anual √∑ 12, etc)
4. SEMPRE mantenha o contexto da conversa - nunca esque√ßa valores j√° mencionados
5. Quando tiver descoberto gastos em todas as categorias principais, responda: "Ent√£o essa √© a estimativa dos seus custos mensais:" seguido da lista organizada do maior para o menor gasto, e termine com "considerando parcelas dos gastos pontuais, como sa√∫de ou viagens, inclusos nos gastos mensais, para melhor organiza√ß√£o financeira."
6. Fa√ßa APENAS UMA pergunta por mensagem
7. Seja conciso - m√°ximo 2-3 frases curtas por resposta
8. Use linguagem simples e calorosa do portugu√™s brasileiro
9. Use no m√°ximo 1-2 emojis por mensagem

C√ÅLCULO DE DATAS (IMPORTANTE):
- 12 meses de julho 2025 = julho de 2026
- 6 meses de julho 2025 = janeiro de 2026
- 18 meses de julho 2025 = janeiro de 2027

QUANDO USAR "Ent√£o essa √© a estimativa dos seus custos mensais:":
- SOMENTE quando tiver coletado gastos das principais categorias
- Se faltar alguma categoria importante, continue perguntando

DICAS PARA GUIAR O USU√ÅRIO:
- Se disser "n√£o sei o valor", ajude a estimar baseado na frequ√™ncia de uso
- Se disser "n√£o tenho esse gasto", confirme e passe para pr√≥xima categoria
- Se estiver muito vago, d√™ exemplos da categoria para ajudar a lembrar

IMPORTANTE: Foque APENAS em descobrir e organizar os gastos mensais. N√£o d√™ conselhos de economia ainda.`
        },
        ...history,
        {
          role: 'user',
          content: message
        }
      ];

      console.log(`üí∞ Arnaldo Expenses processing message with ${history.length} messages of history`);

      const completion = await this.openai.chat.completions.create({
        model: 'gpt-4o',
        messages: messages,
        temperature: 0.3, // Reduced for more consistent responses
        max_tokens: 300, // Keeping responses concise
      });

      const response = completion.choices[0].message.content;
      console.log(`‚úÖ Arnaldo Expenses response: "${response}"`);
      
      // Check if expenses are complete
      const areExpensesComplete = response.includes("Ent√£o essa √© a estimativa dos seus custos mensais:");
      
      return {
        response,
        expensesComplete: areExpensesComplete
      };
      
    } catch (error) {
      console.error('‚ùå Error in Arnaldo Expenses chat:', error);
      throw error;
    }
  }

  async getConversationHistory(phoneNumber) {
    try {
      // Get all messages for this user to provide full context
      const messages = await Message.getConversationHistory(phoneNumber);
      
      // Convert to OpenAI format
      return messages.map(msg => ({
        role: msg.direction === 'inbound' ? 'user' : 'assistant',
        content: msg.content
      }));
      
    } catch (error) {
      console.error('‚ùå Error getting conversation history:', error);
      return [];
    }
  }
}

module.exports = ArnaldoMonthlyExpenses;